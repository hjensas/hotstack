---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Ensure logs directory
  ansible.builtin.file:
    path: "{{ hotlog_dir }}"
    state: directory
    mode: "0750"

- name: Must-gather operations
  when: hotlogs_must_gather_enabled | bool
  block:
    - name: Run must-gather operations
      delegate_to: controller-0
      hotlogs_must_gather:
        dest_dir: "{{ base_dir }}/must-gather"
        image_stream: "{{ hotlogs_must_gather_image_stream }}"
        image: "{{ hotlogs_must_gather_image }}"
        timeout: "{{ hotlogs_must_gather_timeout }}"
        additional_namespaces: "{{ hotlogs_must_gather_additional_namespaces }}"
        sos_edpm: "{{ hotlogs_must_gather_sos_edpm }}"
        sos_decompress: "{{ hotlogs_must_gather_decompress }}"
        compress: true
      register: must_gather_result

    - name: Display must-gather result
      ansible.builtin.debug:
        msg: "{{ must_gather_result.msg }}"

  rescue:
    - name: Display must-gather failure
      ansible.builtin.debug:
        msg: >-
          Must-gather operations failed:
          {{ ansible_failed_result.msg | default('Unknown error') }}

- name: Collect hotstack data
  delegate_to: "{{ inventory_hostname }}"
  ansible.posix.synchronize:
    src: "zuul@{{ controller_floating_ip }}:{{ item }}"
    dest: >-
      {{
        [
          hotlog_dir,
          item
          | ansible.builtin.basename
          | ansible.builtin.regex_replace('^[.]', '')
        ] | ansible.builtin.path_join
      }}
    rsync_timeout: 300
    mode: pull
    archive: false
    recursive: true
    times: true
    copy_links: true
    dirs: true
  loop: "{{ hotlog_collect_paths }}"
  ignore_errors: true  # noqa: ignore-errors

- name: Must-gather post operations
  when: hotlogs_must_gather_enabled | bool
  block:
    - name: Untar must-gather
      delegate_to: "{{ inventory_hostname }}"
      ansible.builtin.unarchive:
        src: "{{ hotlog_dir }}/must-gather.tar.gz"
        dest: "{{ hotlog_dir }}"
        remote_src: true

    - name: Remove must-gather tar.gz
      delegate_to: "{{ inventory_hostname }}"
      ansible.builtin.file:
        path: "{{ hotlog_dir }}/must-gather.tar.gz"
        state: absent

  rescue:
    - name: Display must-gather post failure
      ansible.builtin.debug:
        msg: >-
          Must-gather post operations failed:
          {{ ansible_failed_result.msg | default('Unknown error') }}
