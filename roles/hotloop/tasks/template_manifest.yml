---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: "Stage: {{ item.name }} :: Ensure j2_manifest dir"
  ansible.builtin.file:
    path: >-
      {{
        [
          manifests_dir,
          item.j2_manifest | dirname | ansible.builtin.basename
        ] | ansible.builtin.path_join
      }}
    state: directory
    mode: '0755'

- name: "Stage: {{ item.name }} :: Check if j2_manifest exists in synced work directory"
  when: not item.j2_manifest.startswith('/')
  ansible.builtin.stat:
    path: >-
      {{
        [_work_dir, item.j2_manifest] |
        ansible.builtin.path_join
      }}
  register: _synced_j2_manifest_stat

- name: "Stage: {{ item.name }} :: Template manifest"
  ansible.builtin.template:
    remote_src: "{{ _synced_j2_manifest_stat.stat.exists | default(false) }}"
    src: >-
      {{
        [_work_dir, item.j2_manifest] | ansible.builtin.path_join
        if _synced_j2_manifest_stat.stat.exists | default(false)
        else item.j2_manifest
      }}
    dest: >-
      {{
        [
          manifests_dir,
          item.j2_manifest | dirname | ansible.builtin.basename,
          item.j2_manifest | ansible.builtin.basename | ansible.builtin.splitext | first
        ] | ansible.builtin.path_join
      }}

- name: "Stage: {{ item.name }} :: Apply patches"
  when: item.patches is defined
  hotloop_yaml_patch:
    file: >-
      {{
        [
          manifests_dir,
          item.j2_manifest | dirname | ansible.builtin.basename,
          item.j2_manifest | ansible.builtin.basename
        ] | ansible.builtin.path_join
      }}
    path: "{{ __patch.path }}"
    value: "{{ __patch.value }}"
  loop: "{{ item.patches }}"
  loop_control:
    label: "{{ __patch.path }}"
    loop_var: __patch

- name: "Stage: {{ item.name }} :: Apply static manifest"
  hotloop_oc_apply_file:
    file: >-
      {{
        [
          manifests_dir,
          item.j2_manifest | dirname | ansible.builtin.basename,
          item.j2_manifest | ansible.builtin.basename | ansible.builtin.splitext | first
        ] | ansible.builtin.path_join
      }}
